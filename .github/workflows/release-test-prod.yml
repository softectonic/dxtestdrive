# Deploy to Production Workflow
#
# This workflow handles the deployment of the release to the production environment.
# It is manually triggered and allows the user to specify the release definition file to be used.
# The specified file should be a previously generated and manually reviewed release definition file
# located in the 'release-definitions' directory. This approach ensures that deployments to 
# production are conducted with caution and after necessary approvals.
#
# Workflow Triggers:
# - Manually triggered via GitHub's workflow_dispatch event.
# - Allows input for specifying the release definition file name.
#
# Workflow Steps:
# 1. Checkout the repository.
# 2. Deploy the release using the specified release definition file.
#

name: Test Production Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'release-definitions/*.yml' # Trigger for any yml file containing 'release-def'

jobs:
  set_release_def_path:
    runs-on: ubuntu-latest
    outputs:
      release_def_path: ${{ steps.set_release_def_path.outputs.release_def_path }}
    steps:
      - uses: actions/checkout@v2
      - name: Determine Release Definition Path
        id: set_release_def_path
        run: |
          RELEASE_DEF_PATH="release-definitions/release-$(date +'%m%d%Y').yml"
          echo "RELEASE_DEF_PATH=$RELEASE_DEF_PATH" >> $GITHUB_ENV
          echo "::set-output name=release_def_path::$RELEASE_DEF_PATH"

  PROD:
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts
    if: github.event.pull_request.merged == true
    environment:
      name: PROD

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Set the file name based on today's date
      #- name: Set Release Definition Filename
      #  run: echo "RELEASE_DEF_PATH=release-definitions/release-$(date +'%m%d%Y').yml" >> $GITHUB_ENV

      - name: Authenticate to PROD
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url  -f ./authfile -a prod

      # Authenticate to npm
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://npm.pkg.github.com'

      # Release to environment  
      - name: Release to PROD
        run: |
          RELEASE_DEF_PATH="${{ needs.prepare-release-definition.outputs.release_def_path }}"
          sfp orchestrator:release -u prod -p $RELEASE_DEF_PATH --npm --scope ${{ github.repository_owner }} --generatechangelog --branchname changelog -g "::group::,::endgroup::"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
