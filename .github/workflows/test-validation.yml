# DX@Scale CI/CD Template for GitHub
#----------------------------------------------------------------------------------------------------
# Follows reference pipeline available at docs.dxatscale.io
# 
#-----------------------------------------------------------------------------------------------------
# To know more about dxatscale, visit https://docs.dxatscale.io
# To know more on sfpowerscripts, visit- https://sfpowerscripts.dxatscale.io/
# To know more on sfpowerkit, visit- https://github.com/Accenture/sfpowerkit


# This pipeline is used to validate an incoming change using a dev environment fetched from the CI pool

name: 'PR Validation on Initial and Final Approval - Auto Triggered'

on:
  pull_request:
    types: [opened, labeled]
    branches:
      - main
    paths:
      - "src*/**"
      - "sfdx-project*"


  workflow_dispatch:


jobs:
  validate:
    name: 'Validate Changed Packages'
    if: >
      github.event_name == 'pull_request' &&
      (github.event.action == 'opened' ||
       github.event.action == 'labeled' && github.event.label.name == 'ready-for-final-test')
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Authenticate Dev Hub'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url  -f authfile -a devhub

       # Validate source and trigger test
      #- name: 'Push source to scratch org'
      #  run: 'sfp orchestrator:validate -p ci -v devhub -x' 

      - name: 'Push source to scratch org'
        run: |
          sfp orchestrator:validate -p ci -v devhub -x > release.log
          cat release.log

      - name: 'Check for Deleting scratch org'
        id: check_scratch_org
        run: |
          if grep -q "Deleting scratch org" release.log; then
            echo "Scratch org deleted. Preparing new one."
            echo "::set-output name=scratch-org-deleted::true"
          else
            echo "No scratch org deletion detected."
            echo "::set-output name=scratch-org-deleted::false"
          fi

      - name: 'Prepare a scratch org'
        if: steps.check_scratch_org.outputs.scratch-org-deleted == 'true'
        run: 'sfp orchestrator:prepare -f config/project-ci-single-pool-def.json -v devhub'
