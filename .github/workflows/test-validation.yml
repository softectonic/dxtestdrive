# DX@Scale CI/CD Template for GitHub
#----------------------------------------------------------------------------------------------------
# Follows reference pipeline available at docs.dxatscale.io
# 
#-----------------------------------------------------------------------------------------------------
# To know more about dxatscale, visit https://docs.dxatscale.io
# To know more on sfpowerscripts, visit- https://sfpowerscripts.dxatscale.io/
# To know more on sfpowerkit, visit- https://github.com/Accenture/sfpowerkit


# This workflow automates the validation of changed packages in pull requests (PRs) targeting the main branch using a dev environment fetched from the CI pool. 
# It activates on PR open and label events, focusing on 'src*' and 'sfdx-project*' paths. 
# Features include repository checkout, Salesforce Dev Hub authentication, source validation, scratch org status check, 
# and triggering a separate workflow for scratch org preparation if needed.
# Purpose: Ensure code quality and compliance before final approval in Salesforce development.

name: 'PR Validation on Initial and Final Approval - Auto Triggered'

on:
  pull_request:
    types: [opened, labeled]
    branches:
      - main


  workflow_dispatch:

# Set the environment variables for SF Org Wide Email Address
env:
  SF_EMAIL_ADDRESS: ${{ secrets.SF_EMAIL_ADDRESS }}
  SF_DISPLAY_NAME: ${{ secrets.SF_DISPLAY_NAME }}


jobs:
  validate:
    name: 'Validate Changed Packages'
    if: >
      github.event_name == 'pull_request' &&
      (github.event.action == 'opened' ||
       github.event.action == 'labeled' && github.event.label.name == 'ready-for-final-test')
    runs-on: ubuntu-latest
    environment: POOL
    container: ghcr.io/dxatscale/sfpowerscripts

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
      - run: pip install PyYAML

      - name: Fetch main branch
        run: |
          git config --global --add safe.directory /__w/dxtestdrive/dxtestdrive
          git fetch --no-tags --depth=1 origin +refs/heads/main:refs/remotes/origin/main
  
      - name: Check changed files
        run: |
          echo "CHECKING FOR RELEVANT FILE CHANGES..."
          # Fallback to comparing against the main branch if this is a new branch with no prior commits
          if [ -z "${{ github.event.before }}" ] || [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]; then
            BASE_SHA="origin/main"
          else
            BASE_SHA="${{ github.event.before }}"
          fi
          
          if git diff --name-only $BASE_SHA ${{ github.sha }} | grep -qE 'src.*/.*|sfdx-project.*'; then
            echo "SHOULD_RUN=true" >> $GITHUB_ENV
          else
            echo "SHOULD_RUN=false" >> $GITHUB_ENV
          fi

      - name: 'Authenticate Dev Hub'
        if: env.SHOULD_RUN == 'true'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sf org login sfdx-url  -f authfile -a devhub

      - name: 'Validate source and trigger test'
        if: env.SHOULD_RUN == 'true'
        run: |
          sfp orchestrator:validate -p ci -v devhub -x
        env:
          TARGET_ENVIRONMENT: ${{ job.environment.name }}

      - name: 'Trigger Separate Workflow for Scratch Org Replenish'
        if: env.SHOULD_RUN == 'true'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type": "replenish-scratch-org"}'
