# Generate Release Definition Workflow
#
# This workflow is responsible for automatically generating the release definition file.
# It is triggered when changes to 'release-vars-file.json' are merged into the main branch.
# The workflow runs a script that generates a release definition file based on the 
# parameters specified in 'release-vars-file.json'. The generated file is committed to the 
# repository, allowing for manual review and modifications before the deployment process.
#
# Workflow Triggers:
# - Pull request merge into the main branch, specifically when changes are made to 'release-vars-file.json'.
#
# Workflow Steps:
# 1. Checkout the repository.
# 2. Run the script to generate the release definition file
#

name: Release Definition Prep

on:
  workflow_dispatch:
    inputs:
      configFile:
        description: 'Path to the config file'
        required: false
        default: 'release-definitions/config.yml'

jobs:
  create-branch-and-generate-release-definition:
    name: 'Prepare Release Definition'
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
          persist-credentials: true

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory /__w/dxtestdrive/dxtestdrive

      - name: Check if Release Definition Branch Exists
        id: check_branch
        run: |
          if git ls-remote --heads origin release-definition | grep -q 'refs/heads/release-definition'; then
            echo "Branch exists, deleting..."
            git push origin --delete release-definition
          else
            echo "Branch does not exist." 
          fi

      - name: Create Release Definition Branch
        run: |
            git branch release-definition origin/main
            git push origin release-definition

      - name: Generate Release Definition
        run: bash ./scripts/releaseDefinition.sh "${{ github.event.inputs.configFile }}"